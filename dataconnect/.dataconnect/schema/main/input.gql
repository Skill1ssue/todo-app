"""
✨ `Todo_KeyOutput` returns the primary key fields of table type `Todo`.

It has the same format as `Todo_Key`, but is only used as mutation return value.
"""
scalar Todo_KeyOutput
"""
✨ Generated data input type for table 'Todo'. It includes all necessary fields for creating or upserting rows into table.
"""
input Todo_Data {
  """
  ✨ Generated from Field `Todo`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Todo`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Todo`.`completed` of type `Boolean!`
  """
  completed: Boolean
  """
  ✨ `_expr` server value variant of `completed` (✨ Generated from Field `Todo`.`completed` of type `Boolean!`)
  """
  completed_expr: Boolean_Expr
  """
  ✨ Generated from Field `Todo`.`createdAt` of type `Date!`
  """
  createdAt: Date
  """
  ✨ `_date` server value variant of `createdAt` (✨ Generated from Field `Todo`.`createdAt` of type `Date!`)
  """
  createdAt_date: Date_Relative
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Todo`.`createdAt` of type `Date!`)
  """
  createdAt_expr: Date_Expr
  """
  ✨ Generated from Field `Todo`.`text` of type `String!`
  """
  text: String
  """
  ✨ `_expr` server value variant of `text` (✨ Generated from Field `Todo`.`text` of type `String!`)
  """
  text_expr: String_Expr
}
"""
✨ Generated filter input type for table 'Todo'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Todo_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Todo_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Todo_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Todo_Filter!]
  """
  ✨ Generated from Field `Todo`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Todo`.`completed` of type `Boolean!`
  """
  completed: Boolean_Filter
  """
  ✨ Generated from Field `Todo`.`createdAt` of type `Date!`
  """
  createdAt: Date_Filter
  """
  ✨ Generated from Field `Todo`.`text` of type `String!`
  """
  text: String_Filter
}
"""
✨ Generated first-row input type for table 'Todo'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Todo_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Todo_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Todo_Filter
}
"""
✨ Generated having input type for table 'Todo'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Todo_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Todo_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Todo_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Todo_Having!]
  """
  ✨ Generated from Field `Todo`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Todo`.`completed_count` of type `Int!`
  """
  completed_count: Int_Filter
  """
  ✨ Generated from Field `Todo`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `Todo`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Todo`.`text_count` of type `Int!`
  """
  text_count: Int_Filter
  """
  ✨ Generated from Field `Todo`.`createdAt_min` of type `Date`
  """
  createdAt_min: Date_Filter
  """
  ✨ Generated from Field `Todo`.`createdAt_max` of type `Date`
  """
  createdAt_max: Date_Filter
}
"""
✨ Generated key input type for table 'Todo'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Todo_Key {
  """
  ✨ Generated from Field `Todo`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Todo`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Todo'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Todo_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Todo_Filter
}
"""
✨ Generated order input type for table 'Todo'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Todo_Order {
  """
  ✨ Generated from Field `Todo`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Todo`.`completed` of type `Boolean!`
  """
  completed: OrderDirection
  """
  ✨ Generated from Field `Todo`.`createdAt` of type `Date!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `Todo`.`text` of type `String!`
  """
  text: OrderDirection
}
